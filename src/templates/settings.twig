{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Support plugin for Craft CMS 3.x
 *
 * Support Settings.twig
 *
 * @author    Luke Youell
 * @copyright Copyright (c) 2018 Luke Youell
 * @link      https://github.com/lukeyouell
 * @package   Support
 * @since     1.0.0
 */
#}

{% import "_includes/forms" as forms %}

{% macro configWarning(setting) -%}
  {% set setting = '<code>' ~ setting ~ '</code>' %}
  {{ 'This is being overridden by the {setting} config setting in your {file} config file.'|t('update-checker', {
        setting: setting,
        file:    'update-checker.php'
  })|raw }}
{%- endmacro %}

{% from _self import configWarning %}

<h2 class="first">Notifications</h2>

{{ forms.lightswitchField({
    first:         true,
    label:        'Email Notifications'|t,
    id:           'email',
    name:         'email',
    on:           settings.email,
    disabled:     'email' in overrides,
    warning:      'email' in overrides ? configWarning('email'),
}) }}

{{ forms.textField({
    first: true,
    label: 'To Email',
    instructions: 'The email address(es) that ticket notifications will be send to. Separate multiple email addresses with commas.',
    id: 'toEmail',
    name: 'toEmail',
    placeholder: 'joe.bloggs@email.co.uk, jane.bloggs@email.co.uk',
    value: settings.toEmail,
    disabled: 'toEmail' in overrides,
    warning: 'toEmail' in overrides ? configWarning('toEmail'),
})}}

<hr>

<h2 class="first">Attachments</h2>

{% set allVolumes = craft.app.volumes.getAllVolumes() %}
{% set volumeList = [] %}
{% for volume in allVolumes %}
    {% set volumeList = volumeList|merge([{'value': volume.id, 'label': volume.name}]) %}
{% endfor %}

{% macro assetLocationInput(volumeOptions, volumeId, subpath) %}
    {% from "_includes/forms" import select, text %}
    <div class="flex">
        <div>
            {{ select({
                id: 'volumeId',
                name: 'volumeId',
                options: volumeOptions,
                value: volumeId,
            }) }}
        </div>
        <div class="flex-grow">
            {{ text({
                id: 'volumeSubpath',
                class: 'ltr',
                name: 'volumeSubpath',
                value: subpath,
                placeholder: 'path/to/subfolder'
            }) }}
        </div>
    </div>
{% endmacro %}

{% from _self import assetLocationInput %}

{% if volumeList %}
    {{ forms.field({
        first: true,
        label: "Attachment Location",
        instructions: "Where do you want to store attachments? Note that the subfolder path can contain variables like <code>{username}</code>."|t('app')
    }, assetLocationInput(volumeList, settings.volumeId, settings.volumeSubpath)) }}
{% else %}
    {{ forms.field({
        first: true,
        label: "Attachment Location"
    }, '<p class="error">' ~ "No volumes exist yet." ~ '</p>') }}
{% endif %}
