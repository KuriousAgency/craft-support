{% extends "support/_layouts/settings" %}

{% set selectedTab = 'general' %}
{% set fullPageForm = true %}

{% import "_includes/forms" as forms %}

{% macro configWarning(setting) -%}
  {% set setting = '<code>' ~ setting ~ '</code>' %}
  {{ 'This is being overridden by the {setting} config setting in your {file} config file.'|t('support', {
        setting: setting,
        file:    'support.php'
  })|raw }}
{%- endmacro %}

{% from _self import configWarning %}

{% block content %}

{{ forms.hidden({
    name: 'action',
    value: 'plugins/save-plugin-settings'
})}}

{{ forms.hidden({
    name: 'pluginHandle',
    value: pluginHandle
})}}

  <h2 class="first">Notifications</h2>

  {{ forms.lightswitchField({
      first:    true,
      label:    'Email Notifications'|t,
      id:       'email',
      name:     'settings[email]',
      on:       settings.email,
      disabled: 'email' in overrides,
      warning:  'email' in overrides ? configWarning('email'),
  })}}

  {{ forms.textField({
      first:        true,
      label:        'To Email',
      instructions: 'The email address(es) that ticket notifications will be send to. Separate multiple email addresses with commas.',
      id:          'toEmail',
      name:        'settings[toEmail]',
      placeholder: 'joe.bloggs@email.co.uk, jane.bloggs@email.co.uk',
      value: settings.toEmail,
      disabled:    'toEmail' in overrides,
      warning:     'toEmail' in overrides ? configWarning('toEmail'),
  })}}

  <hr>

  <h2 class="first">Attachments</h2>

  {{ forms.lightswitchField({
      first:    true,
      label:    'Allow Attachments'|t,
      id:       'attachments',
      name:     'settings[attachments]',
      on:       settings.attachments,
      disabled: 'attachments' in overrides,
      warning:  'attachments' in overrides ? configWarning('attachments'),
  })}}

  {% set allVolumes = craft.app.volumes.getAllVolumes() %}
  {% set volumeList = [] %}
  {% for volume in allVolumes %}
      {% set volumeList = volumeList|merge([{'value': volume.id, 'label': volume.name}]) %}
  {% endfor %}

  {% macro assetLocationInput(volumeOptions, volumeId, subpath) %}
      {% from "_includes/forms" import select, text %}
      <div class="flex">
          <div>
              {{ select({
                  id:      'volumeId',
                  name:    'volumeId',
                  options: volumeOptions,
                  value:   volumeId,
              }) }}
          </div>
          <div class="flex-grow">
              {{ text({
                  id:          'volumeSubpath',
                  class:       'ltr',
                  name:        'settings[volumeSubpath]',
                  value:       subpath,
                  placeholder: 'path/to/subfolder'
              }) }}
          </div>
      </div>
  {% endmacro %}

  {% from _self import assetLocationInput %}

  {% if volumeList %}
      {{ forms.field({
          first: true,
          label: "Attachment Location",
          instructions: "Where do you want to store attachments? Note that the subfolder path can contain variables like <code>{username}</code>."|t('app')
      }, assetLocationInput(volumeList, settings.volumeId, settings.volumeSubpath)) }}
  {% else %}
      {{ forms.field({
          first: true,
          label: "Attachment Location"
      }, '<p class="error">' ~ "No volumes exist yet." ~ '</p>') }}
  {% endif %}

{% endblock %}
